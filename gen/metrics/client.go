// Code generated by goa v3.2.6, DO NOT EDIT.
//
// metrics client
//
// Command:
// $ goa gen github.com/jordanfowler/messari-metrics/design

package metrics

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "metrics" service client.
type Client struct {
	AssetEndpoint     goa.Endpoint
	AggregateEndpoint goa.Endpoint
}

// NewClient initializes a "metrics" service client given the endpoints.
func NewClient(asset, aggregate goa.Endpoint) *Client {
	return &Client{
		AssetEndpoint:     asset,
		AggregateEndpoint: aggregate,
	}
}

// Asset calls the "asset" endpoint of the "metrics" service.
func (c *Client) Asset(ctx context.Context, p *AssetPayload) (res *AssetResult, err error) {
	var ires interface{}
	ires, err = c.AssetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AssetResult), nil
}

// Aggregate calls the "aggregate" endpoint of the "metrics" service.
func (c *Client) Aggregate(ctx context.Context, p *AggregatePayload) (res *AggregateResult, err error) {
	var ires interface{}
	ires, err = c.AggregateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AggregateResult), nil
}
